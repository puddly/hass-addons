#!/usr/bin/with-contenv bashio
# ==============================================================================
# Start hassio-discovery
# ==============================================================================
bashio::log.info "Starting hassio-discovery..."

declare name
declare device
declare usb_device_path
declare usb_manufacturer
declare usb_product
declare usb_device_path
declare ezsp_listen_port

device=$(bashio::config 'device')
ezsp_listen_port="$(bashio::addon.port 9999)"
name="Multi-PAN"

if [ -d /sys/devices/platform/soc/fe201800.serial/tty/ttyAMA1 ] && [ "${device}" == "/dev/ttyAMA1" ]; then
    bashio::log.info "Detected Yellow"
    name="Yellow ${name}"
elif [ -e "/sys/class/tty/$(basename ${device})" ]; then
    usb_device_path=$(realpath /sys/class/tty/$(readlink /sys/class/tty/$(basename ${device}))/../../../../)

    if [ -f "${usb_device_path}/manufacturer" ] && [ -f "${usb_device_path}/product" ]; then
        usb_manufacturer=$(cat "${usb_device_path}/manufacturer")
        usb_product=$(cat "${usb_device_path}/product")

        if [[ "${usb_manufacturer}" == "Nabu Casa" && "${usb_product}" == "SkyConnect"* ]]; then
            bashio::log.info "Detected SkyConnect"
            name="SkyConnect ${name}"
        fi
    fi
fi

config=$(bashio::var.json \
	port "^${ezsp_listen_port}" \
    radio_type "ezsp" \
    device "${device}" \
	name "${name}"
)

# Send discovery info
if bashio::discovery "zha" "${config}" > /dev/null; then
    bashio::log.info "Successfully send discovery information to Home Assistant."
else
    bashio::log.error "Discovery message to Home Assistant failed!"
fi
